{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport { Asset } from 'expo-asset';\nexport default function useCachedResources(images, fonts) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([images && Asset.loadAsync(images), Font.loadAsync(_objectSpread(_objectSpread({}, Ionicons.font), {}, {\n                Ubuntu_300Light: require(\"../fonts/Ubuntu_300Light.ttf\"),\n                Ubuntu_300Light_Italic: require(\"../fonts/Ubuntu_300Light_Italic.ttf\"),\n                Ubuntu_400Regular: require(\"../fonts/Ubuntu_400Regular.ttf\"),\n                Ubuntu_400Regular_Italic: require(\"../fonts/Ubuntu_400Regular_Italic.ttf\"),\n                Ubuntu_500Medium: require(\"../fonts/Ubuntu_500Medium.ttf\"),\n                Ubuntu_500Medium_Italic: require(\"../fonts/Ubuntu_500Medium_Italic.ttf\"),\n                Ubuntu_700Bold: require(\"../fonts/Ubuntu_700Bold.ttf\"),\n                Ubuntu_700Bold_Italic: require(\"../fonts/Ubuntu_700Bold_Italic.ttf\")\n              }, fonts))]));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.warn(_context.t0);\n\n            case 8:\n              _context.prev = 8;\n              setLoadingComplete(true);\n              return _context.finish(8);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5, 8, 11]], Promise);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n  return isLoadingComplete;\n}","map":{"version":3,"names":["React","Ionicons","Font","Asset","useCachedResources","images","fonts","useState","isLoadingComplete","setLoadingComplete","useEffect","loadResourcesAndDataAsync","Promise","all","loadAsync","font","Ubuntu_300Light","require","Ubuntu_300Light_Italic","Ubuntu_400Regular","Ubuntu_400Regular_Italic","Ubuntu_500Medium","Ubuntu_500Medium_Italic","Ubuntu_700Bold","Ubuntu_700Bold_Italic","console","warn"],"sources":["C:/Projects/WhiteHat Jr/template-with-bottom-tabs-auth-flow/node_modules/react-native-rapi-ui/hooks/useCachedResources.ts"],"sourcesContent":["import * as React from 'react';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport * as Font from 'expo-font';\r\n\r\nimport { Asset } from 'expo-asset';\r\n\r\nexport default function useCachedResources(\r\n\timages?: Array<any> | null,\r\n\tfonts?: any\r\n) {\r\n\tconst [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\n\r\n\t// Load any resources or data that we need prior to rendering the app\r\n\tReact.useEffect(() => {\r\n\t\tasync function loadResourcesAndDataAsync() {\r\n\t\t\ttry {\r\n\t\t\t\t// Load fonts\r\n\t\t\t\tawait Promise.all([\r\n\t\t\t\t\timages && Asset.loadAsync(images),\r\n\t\t\t\t\tFont.loadAsync({\r\n\t\t\t\t\t\t...Ionicons.font,\r\n\t\t\t\t\t\tUbuntu_300Light: require('../fonts/Ubuntu_300Light.ttf'),\r\n\t\t\t\t\t\tUbuntu_300Light_Italic: require('../fonts/Ubuntu_300Light_Italic.ttf'),\r\n\t\t\t\t\t\tUbuntu_400Regular: require('../fonts/Ubuntu_400Regular.ttf'),\r\n\t\t\t\t\t\tUbuntu_400Regular_Italic: require('../fonts/Ubuntu_400Regular_Italic.ttf'),\r\n\t\t\t\t\t\tUbuntu_500Medium: require('../fonts/Ubuntu_500Medium.ttf'),\r\n\t\t\t\t\t\tUbuntu_500Medium_Italic: require('../fonts/Ubuntu_500Medium_Italic.ttf'),\r\n\t\t\t\t\t\tUbuntu_700Bold: require('../fonts/Ubuntu_700Bold.ttf'),\r\n\t\t\t\t\t\tUbuntu_700Bold_Italic: require('../fonts/Ubuntu_700Bold_Italic.ttf'),\r\n\t\t\t\t\t\t...fonts,\r\n\t\t\t\t\t}),\r\n\t\t\t\t]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\t// We might want to provide this error information to an error reporting service\r\n\t\t\t\tconsole.warn(e);\r\n\t\t\t} finally {\r\n\t\t\t\tsetLoadingComplete(true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tloadResourcesAndDataAsync();\r\n\t}, []);\r\n\r\n\treturn isLoadingComplete;\r\n}\r\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AAEA,SAASC,KAAT,QAAsB,YAAtB;AAEA,eAAe,SAASC,kBAAT,CACdC,MADc,EAEdC,KAFc,EAGb;EACD,sBAAgDN,KAAK,CAACO,QAAN,CAAe,KAAf,CAAhD;EAAA;EAAA,IAAOC,iBAAP;EAAA,IAA0BC,kBAA1B;;EAGAT,KAAK,CAACU,SAAN,CAAgB,YAAM;IACrB,SAAeC,yBAAf;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,iCAGQC,OAAO,CAACC,GAAR,CAAY,CACjBR,MAAM,IAAIF,KAAK,CAACW,SAAN,CAAgBT,MAAhB,CADO,EAEjBH,IAAI,CAACY,SAAL,iCACIb,QAAQ,CAACc,IADb;gBAECC,eAAe,EAAEC,OAAO,gCAFzB;gBAGCC,sBAAsB,EAAED,OAAO,uCAHhC;gBAICE,iBAAiB,EAAEF,OAAO,kCAJ3B;gBAKCG,wBAAwB,EAAEH,OAAO,yCALlC;gBAMCI,gBAAgB,EAAEJ,OAAO,iCAN1B;gBAOCK,uBAAuB,EAAEL,OAAO,wCAPjC;gBAQCM,cAAc,EAAEN,OAAO,+BARxB;gBASCO,qBAAqB,EAAEP,OAAO;cAT/B,GAUIX,KAVJ,EAFiB,CAAZ,CAHR;;YAAA;cAAA;cAAA;;YAAA;cAAA;cAAA;cAoBEmB,OAAO,CAACC,IAAR;;YApBF;cAAA;cAsBEjB,kBAAkB,CAAC,IAAD,CAAlB;cAtBF;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IA0BAE,yBAAyB;EACzB,CA5BD,EA4BG,EA5BH;EA8BA,OAAOH,iBAAP;AACA"},"metadata":{},"sourceType":"module"}