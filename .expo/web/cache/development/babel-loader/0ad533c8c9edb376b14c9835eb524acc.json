{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { component, themeColor } from \"../../constants/colors\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Checkbox = function Checkbox(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? false : _ref$value,\n      onValueChange = _ref.onValueChange,\n      checkedColor = _ref.checkedColor,\n      uncheckedColor = _ref.uncheckedColor,\n      _ref$inverseColor = _ref.inverseColor,\n      inverseColor = _ref$inverseColor === void 0 ? themeColor.white : _ref$inverseColor,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      style = _ref.style;\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  var selectedCheckedColor = checkedColor ? checkedColor : component[theme].checkBox.checkedColor;\n  var selectedUncheckedColor = uncheckedColor ? uncheckedColor : component[theme].checkBox.uncheckedColor;\n\n  var handleChange = function handleChange() {\n    if (onValueChange) {\n      onValueChange(!value);\n    }\n  };\n\n  return _jsx(TouchableOpacity, {\n    onPress: handleChange,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: size,\n      height: size,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: (style == null ? void 0 : style.borderRadius) || 4,\n      borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\n      backgroundColor: disabled ? component[theme].checkBox.disabledColor : value ? selectedCheckedColor : \"transparent\",\n      borderWidth: 1\n    }),\n    disabled: disabled,\n    children: _jsx(Ionicons, {\n      name: \"md-checkmark\",\n      size: size - 2,\n      color: disabled ? inverseColor : value ? inverseColor : selectedUncheckedColor\n    })\n  });\n};\n\nexport default Checkbox;","map":{"version":3,"names":["React","component","themeColor","Ionicons","useTheme","Checkbox","value","onValueChange","checkedColor","uncheckedColor","inverseColor","white","disabled","size","style","theme","selectedCheckedColor","checkBox","selectedUncheckedColor","handleChange","width","height","alignItems","justifyContent","borderRadius","borderColor","backgroundColor","disabledColor","borderWidth"],"sources":["C:/Projects/WhiteHat Jr/template-with-bottom-tabs-auth-flow/node_modules/react-native-rapi-ui/components/CheckBox/CheckBox.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  ColorValue,\r\n  TextInput,\r\n  TextInputProps,\r\n  TouchableOpacity,\r\n  View,\r\n  ViewStyle,\r\n} from \"react-native\";\r\nimport { component, themeColor } from \"../../constants/colors\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\ninterface Props {\r\n  value: boolean;\r\n  onValueChange?: (newValue: boolean) => void;\r\n  checkedColor?: ColorValue;\r\n  uncheckedColor?: ColorValue;\r\n  inverseColor?: ColorValue;\r\n  disabled?: boolean;\r\n  style?: ViewStyle;\r\n  size?: number;\r\n}\r\n\r\nconst Checkbox: React.FC<Props> = ({\r\n  value = false,\r\n  onValueChange,\r\n  checkedColor,\r\n  uncheckedColor,\r\n  inverseColor = themeColor.white,\r\n  disabled = false,\r\n  size = 24,\r\n  style,\r\n}) => {\r\n  const { theme } = useTheme();\r\n  const selectedCheckedColor = checkedColor\r\n    ? checkedColor\r\n    : component[theme].checkBox.checkedColor;\r\n  const selectedUncheckedColor = uncheckedColor\r\n    ? uncheckedColor\r\n    : component[theme].checkBox.uncheckedColor;\r\n\r\n  const handleChange = () => {\r\n    if (onValueChange) {\r\n      onValueChange(!value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={handleChange}\r\n      style={{\r\n        ...style,\r\n        width: size,\r\n        height: size,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: style?.borderRadius || 4,\r\n        borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\r\n        backgroundColor: disabled\r\n          ? component[theme].checkBox.disabledColor\r\n          : value\r\n          ? selectedCheckedColor\r\n          : \"transparent\",\r\n        borderWidth: 1,\r\n      }}\r\n      disabled={disabled}\r\n    >\r\n      <Ionicons\r\n        name=\"md-checkmark\"\r\n        size={size - 2}\r\n        color={\r\n          disabled\r\n            ? inverseColor\r\n            : value\r\n            ? inverseColor\r\n            : selectedUncheckedColor\r\n        }\r\n      />\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default Checkbox;\r\n"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AASA,SAASC,SAAT,EAAoBC,UAApB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT;;;AAaA,IAAMC,QAAyB,GAAG,SAA5BA,QAA4B,OAS5B;EAAA,sBARJC,KAQI;EAAA,IARJA,KAQI,2BARI,KAQJ;EAAA,IAPJC,aAOI,QAPJA,aAOI;EAAA,IANJC,YAMI,QANJA,YAMI;EAAA,IALJC,cAKI,QALJA,cAKI;EAAA,6BAJJC,YAII;EAAA,IAJJA,YAII,kCAJWR,UAAU,CAACS,KAItB;EAAA,yBAHJC,QAGI;EAAA,IAHJA,QAGI,8BAHO,KAGP;EAAA,qBAFJC,IAEI;EAAA,IAFJA,IAEI,0BAFG,EAEH;EAAA,IADJC,KACI,QADJA,KACI;;EACJ,gBAAkBV,QAAQ,EAA1B;EAAA,IAAQW,KAAR,aAAQA,KAAR;;EACA,IAAMC,oBAAoB,GAAGR,YAAY,GACrCA,YADqC,GAErCP,SAAS,CAACc,KAAD,CAAT,CAAiBE,QAAjB,CAA0BT,YAF9B;EAGA,IAAMU,sBAAsB,GAAGT,cAAc,GACzCA,cADyC,GAEzCR,SAAS,CAACc,KAAD,CAAT,CAAiBE,QAAjB,CAA0BR,cAF9B;;EAIA,IAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;IACzB,IAAIZ,aAAJ,EAAmB;MACjBA,aAAa,CAAC,CAACD,KAAF,CAAb;IACD;EACF,CAJD;;EAMA,OACE,KAAC,gBAAD;IACE,OAAO,EAAEa,YADX;IAEE,KAAK,kCACAL,KADA;MAEHM,KAAK,EAAEP,IAFJ;MAGHQ,MAAM,EAAER,IAHL;MAIHS,UAAU,EAAE,QAJT;MAKHC,cAAc,EAAE,QALb;MAMHC,YAAY,EAAE,CAAAV,KAAK,QAAL,YAAAA,KAAK,CAAEU,YAAP,KAAuB,CANlC;MAOHC,WAAW,EAAEnB,KAAK,GAAGU,oBAAH,GAA0BE,sBAPzC;MAQHQ,eAAe,EAAEd,QAAQ,GACrBX,SAAS,CAACc,KAAD,CAAT,CAAiBE,QAAjB,CAA0BU,aADL,GAErBrB,KAAK,GACLU,oBADK,GAEL,aAZD;MAaHY,WAAW,EAAE;IAbV,EAFP;IAiBE,QAAQ,EAAEhB,QAjBZ;IAAA,UAmBE,KAAC,QAAD;MACE,IAAI,EAAC,cADP;MAEE,IAAI,EAAEC,IAAI,GAAG,CAFf;MAGE,KAAK,EACHD,QAAQ,GACJF,YADI,GAEJJ,KAAK,GACLI,YADK,GAELQ;IARR;EAnBF,EADF;AAiCD,CAzDD;;AA2DA,eAAeb,QAAf"},"metadata":{},"sourceType":"module"}