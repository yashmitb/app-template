{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"height\", \"backgroundColor\", \"borderColor\", \"leftAction\", \"middleAction\", \"rightAction\", \"leftContent\", \"middleContent\", \"rightContent\", \"leftTextStyle\", \"rightTextStyle\", \"middleTextStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { component } from \"../../constants/colors\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { Text } from \"../Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TopNav = function TopNav(_ref) {\n  var _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 64 : _ref$height,\n      backgroundColor = _ref.backgroundColor,\n      borderColor = _ref.borderColor,\n      leftAction = _ref.leftAction,\n      middleAction = _ref.middleAction,\n      rightAction = _ref.rightAction,\n      leftContent = _ref.leftContent,\n      middleContent = _ref.middleContent,\n      rightContent = _ref.rightContent,\n      leftTextStyle = _ref.leftTextStyle,\n      rightTextStyle = _ref.rightTextStyle,\n      middleTextStyle = _ref.middleTextStyle,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  return _jsxs(View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: {\n      height: height,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      backgroundColor: backgroundColor ? backgroundColor : component[theme].topNav.backgroundColor,\n      alignItems: \"center\",\n      borderColor: backgroundColor ? borderColor : component[theme].topNav.borderColor,\n      borderBottomWidth: 1\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: leftAction,\n      style: {\n        flex: 1,\n        alignItems: \"flex-start\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"flex-start\",\n          justifyContent: \"center\"\n        },\n        children: typeof leftContent == \"string\" ? _jsx(Text, {\n          style: leftTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: leftContent\n        }) : leftContent\n      })\n    }), _jsx(Pressable, {\n      onPress: middleAction,\n      style: {\n        flex: 4,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: typeof middleContent == \"string\" ? _jsx(Text, {\n          style: middleTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: middleContent\n        }) : middleContent\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: rightAction,\n      style: {\n        flex: 1,\n        alignItems: \"flex-end\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"flex-end\",\n          justifyContent: \"center\"\n        },\n        children: typeof rightContent == \"string\" ? _jsx(Text, {\n          style: rightTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: rightContent\n        }) : rightContent\n      })\n    })]\n  }));\n};\n\nexport default TopNav;","map":{"version":3,"names":["React","component","useTheme","Text","TopNav","height","backgroundColor","borderColor","leftAction","middleAction","rightAction","leftContent","middleContent","rightContent","leftTextStyle","rightTextStyle","middleTextStyle","rest","theme","flexDirection","justifyContent","topNav","alignItems","borderBottomWidth","flex","paddingHorizontal"],"sources":["C:/Projects/WhiteHat Jr/template-with-bottom-tabs-auth-flow/node_modules/react-native-rapi-ui/components/TopNav/TopNav.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Pressable,\r\n  TextStyle,\r\n  View,\r\n  ViewProps,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { component } from \"../../constants/colors\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\nimport { Text } from \"../Text\";\r\n\r\ninterface Props extends ViewProps {\r\n  height?: number;\r\n  backgroundColor?: string;\r\n  borderColor?: string;\r\n  leftAction?: VoidFunction;\r\n  middleAction?: VoidFunction;\r\n  rightAction?: VoidFunction;\r\n  leftContent?: string | React.ReactNode;\r\n  rightContent?: string | React.ReactNode;\r\n  middleContent?: string | React.ReactNode;\r\n  leftTextStyle?: TextStyle;\r\n  rightTextStyle?: TextStyle;\r\n  middleTextStyle?: TextStyle;\r\n}\r\n\r\nconst TopNav: React.FC<Props> = ({\r\n  height = 64,\r\n  backgroundColor,\r\n  borderColor,\r\n  leftAction,\r\n  middleAction,\r\n  rightAction,\r\n  leftContent,\r\n  middleContent,\r\n  rightContent,\r\n  leftTextStyle,\r\n  rightTextStyle,\r\n  middleTextStyle,\r\n  ...rest\r\n}) => {\r\n  const { theme } = useTheme();\r\n  return (\r\n    <View\r\n      {...rest}\r\n      style={{\r\n        height: height,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: backgroundColor\r\n          ? backgroundColor\r\n          : component[theme].topNav.backgroundColor,\r\n        alignItems: \"center\",\r\n        borderColor: backgroundColor\r\n          ? borderColor\r\n          : component[theme].topNav.borderColor,\r\n        borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={leftAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof leftContent == \"string\" ? (\r\n            <Text style={leftTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {leftContent}\r\n            </Text>\r\n          ) : (\r\n            leftContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n      <Pressable\r\n        onPress={middleAction}\r\n        style={{\r\n          flex: 4,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof middleContent == \"string\" ? (\r\n            <Text style={middleTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {middleContent}\r\n            </Text>\r\n          ) : (\r\n            middleContent\r\n          )}\r\n        </View>\r\n      </Pressable>\r\n      <TouchableOpacity\r\n        onPress={rightAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-end\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof rightContent == \"string\" ? (\r\n            <Text style={rightTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {rightContent}\r\n            </Text>\r\n          ) : (\r\n            rightContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}