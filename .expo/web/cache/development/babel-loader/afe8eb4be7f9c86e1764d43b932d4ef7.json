{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"style\", \"padding\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SectionContent = function SectionContent(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === void 0 ? 20 : _ref$padding,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return _jsx(View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: [style, {\n      padding: padding\n    }],\n    children: children\n  }));\n};\n\nexport default SectionContent;","map":{"version":3,"names":["React","SectionContent","children","style","padding","rest"],"sources":["C:/Projects/WhiteHat Jr/template-with-bottom-tabs-auth-flow/node_modules/react-native-rapi-ui/components/Section/SectionContent.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, ViewProps } from \"react-native\";\r\n\r\ninterface Props extends ViewProps {\r\n  children?: React.ReactNode;\r\n  padding?: number;\r\n}\r\n\r\nconst SectionContent: React.FC<Props> = ({\r\n  children,\r\n  style,\r\n  padding = 20,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <View\r\n      {...rest}\r\n      style={[\r\n        style,\r\n        {\r\n          padding: padding,\r\n        },\r\n      ]}\r\n    >\r\n      {children}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SectionContent;\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAQA,IAAMC,cAA+B,GAAG,SAAlCA,cAAkC,OAKlC;EAAA,IAJJC,QAII,QAJJA,QAII;EAAA,IAHJC,KAGI,QAHJA,KAGI;EAAA,wBAFJC,OAEI;EAAA,IAFJA,OAEI,6BAFM,EAEN;EAAA,IADDC,IACC;;EACJ,OACE,KAAC,IAAD,kCACMA,IADN;IAEE,KAAK,EAAE,CACLF,KADK,EAEL;MACEC,OAAO,EAAEA;IADX,CAFK,CAFT;IAAA,UASGF;EATH,GADF;AAaD,CAnBD;;AAqBA,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}